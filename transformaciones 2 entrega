<!DOCTYPE html>
<html>
	<head>
		<title>Transformaciones en Three.js</title>
		<meta charset="UTF-8">
		<style>
			body {
				margin: 0;
				overflow: hidden;
			}
			canvas {
				display: block;
			}
		</style>
	</head>
	<body>
		<script src="https://threejs.org/build/three.min.js"></script>
		<script>
			// Define la función cubo
			function cubo(posini, lado, material) {
				const cuboGeom = new THREE.BoxGeometry(lado, lado, lado);
				const cuboMesh = new THREE.Mesh(cuboGeom, material);
				cuboMesh.position.set(posini[0], posini[1], posini[2]);

				// Crea las líneas de contorno del cubo
				const cuboEdges = new THREE.EdgesGeometry(cuboGeom);
				const cuboLines = new THREE.LineSegments(cuboEdges, new THREE.LineBasicMaterial({color: 0x000000}));
				cuboMesh.add(cuboLines);

				return cuboMesh;
			}

			// Crea la escena
			const scene = new THREE.Scene();
			scene.background = new THREE.Color(0xffffff);

			// Crea la cámara
			const width = window.innerWidth;
			const height = window.innerHeight;
			const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
			camera.position.set(1, 0, 5);

			// Crea el material del cubo
			const cuboMat = new THREE.MeshLambertMaterial({color: 0xff0000});

			// Crea el cubo y lo agrega a la escena
			const lado = 1;
			const posini = [0, 0, 0];
			const cuboMesh = cubo(posini, lado, cuboMat);
			scene.add(cuboMesh);

			// Aplica las transformaciones al cubo
			const tx = new THREE.Vector3(2 * lado, 0, 0);
			cuboMesh.position.add(tx);

			const s = 1.5;
			const scaleMatrix = new THREE.Matrix4().makeScale(s, s, s);
			cuboMesh.applyMatrix4(scaleMatrix);

			const angle = Math.PI / 4;
			const rotMatrix = new THREE.Matrix4().makeRotationX(angle);
			cuboMesh.applyMatrix4(rotMatrix);

			// Crea la luz
			const light = new THREE.PointLight(0xffffff, 1, 100);
			light.position.set(0, 0, 10);
			scene.add(light);

			// Crea el renderer
			const renderer = new THREE.WebGLRenderer();
			renderer.setSize(width, height);
			document.body.appendChild(renderer.domElement);

			// Renderiza la escena en la ventana del navegador
			function animate() {
				requestAnimationFrame(animate);
				renderer.render(scene, camera);
			}
			animate();
		</script>
	</body>
</html>
